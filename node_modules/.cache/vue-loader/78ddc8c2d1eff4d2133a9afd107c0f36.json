{"remainingRequest":"/Volumes/GoogleDrive/My Drive/JavaScript/vue-threebox-sample/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/GoogleDrive/My Drive/JavaScript/vue-threebox-sample/src/components/ThreeboxExample.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Volumes/GoogleDrive/My Drive/JavaScript/vue-threebox-sample/src/components/ThreeboxExample.vue","mtime":1637981430000},{"path":"/Volumes/GoogleDrive/My Drive/JavaScript/vue-threebox-sample/node_modules/cache-loader/dist/cjs.js","mtime":1637704935000},{"path":"/Volumes/GoogleDrive/My Drive/JavaScript/vue-threebox-sample/node_modules/babel-loader/lib/index.js","mtime":1637705426000},{"path":"/Volumes/GoogleDrive/My Drive/JavaScript/vue-threebox-sample/node_modules/cache-loader/dist/cjs.js","mtime":1637704935000},{"path":"/Volumes/GoogleDrive/My Drive/JavaScript/vue-threebox-sample/node_modules/vue-loader/lib/index.js","mtime":1637705662000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KCmltcG9ydCBtYXBib3hnbCBmcm9tICJtYXBib3gtZ2wiOwppbXBvcnQgKiBhcyBNYXBib3hEcmF3IGZyb20gJ21hcGJveC1nbC1kcmF3JzsKaW1wb3J0IHRocmVlYm94IGZyb20gInRocmVlYm94LXBsdWdpbi9kaXN0L3RocmVlYm94IjsKaW1wb3J0IHsgVGhyZWVib3ggfSBmcm9tICd0aHJlZWJveC1wbHVnaW4nOwppbXBvcnQgUHVsc2UgZnJvbSAiLi9QdWxzZXMvUHVsc2UiOwppbXBvcnQgKiBhcyB0dXJmIGZyb20gJ3R1cmYnOwoKbGV0IHB1bHNlID0gbmV3IFB1bHNlKDQwMCwgNDAwMCwgdHJ1ZSk7CnRocmVlYm94CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIlRocmVlYm94RXhhbXBsZSIsCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGFjY2Vzc1Rva2VuOgogICAgICAgICJway5leUoxSWpvaWJtbGphRzlzWVhOdFlYSjBhVzV2SWl3aVlTSTZJbU5yTWpWaE9HcGhPVEF6WkdVemJHOHdOSEpoZFRack1tWWlmUS45OHVETW5HSXZuMXpydzRaV1VPMzVnIiwKICAgIH07CiAgfSwKICBtb3VudGVkKCkgewogICAgbWFwYm94Z2wuYWNjZXNzVG9rZW4gPSB0aGlzLmFjY2Vzc1Rva2VuOwoKICAgIHRoaXMubWFwID0gbmV3IG1hcGJveGdsLk1hcCh7CiAgICAgIGNvbnRhaW5lcjogIm1hcCIsCiAgICAgIGludGVyYWN0aXZlOiB0cnVlLAogICAgICBzdHlsZTogIm1hcGJveDovL3N0eWxlcy9tYXBib3gvbGlnaHQtdjEwIiwKICAgICAgem9vbTogMTYsCiAgICAgIGNlbnRlcjogWy0xMjMuMTA2ODY1OCwgNDkuMjYyNjk4Ml0sCiAgICAgIHBpdGNoOiA2MCwKICAgICAgYmVhcmluZzogMzYwLAogICAgICBhbnRpYWxpYXM6IHRydWUsCiAgICB9KS5vbigic3R5bGUubG9hZCIsICgpID0+IHsKICAgICAgd2luZG93LnRiID0gbmV3IFRocmVlYm94KAogICAgICAgIHRoaXMubWFwLAogICAgICAgIHRoaXMubWFwLmdldENhbnZhcygpLmdldENvbnRleHQoIndlYmdsIiksCiAgICAgICAgewogICAgICAgICAgZGVmYXVsdExpZ2h0czogdHJ1ZSwKICAgICAgICB9CiAgICAgICk7CgogICAgICAvLyBsZXQgX3RoaXMgPSB0aGlzOwoKICAgICAgLy8gQWRkIGRyYXcgY29udHJvbAogICAgICBpZiAodGhpcy5tYXAuZ2V0TGF5ZXIoImN1c3RvbV9sYXllciIpID09IG51bGwpIHsKICAgICAgICBjb25zdCBkcmF3ID0gbmV3IE1hcGJveERyYXcoewogICAgICAgICAgICBkaXNwbGF5Q29udHJvbHNEZWZhdWx0OiBmYWxzZSwKICAgICAgICAgICAgLy8gU2VsZWN0IHdoaWNoIG1hcGJveC1nbC1kcmF3IGNvbnRyb2wgYnV0dG9ucyB0byBhZGQgdG8gdGhlIG1hcC4KICAgICAgICAgICAgY29udHJvbHM6IHsKICAgICAgICAgICAgICBwb2x5Z29uOiB0cnVlLAogICAgICAgICAgICAgIHRyYXNoOiB0cnVlCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIC8vIFNldCBtYXBib3gtZ2wtZHJhdyB0byBkcmF3IGJ5IGRlZmF1bHQuCiAgICAgICAgICAgIC8vIFRoZSB1c2VyIGRvZXMgbm90IGhhdmUgdG8gY2xpY2sgdGhlIHBvbHlnb24gY29udHJvbCBidXR0b24gZmlyc3QuCiAgICAgICAgICAgIGRlZmF1bHRNb2RlOiAnZHJhd19wb2x5Z29uJwogICAgICAgICAgfSk7CiAgICAgICAgdGhpcy5tYXAuYWRkQ29udHJvbChkcmF3KTsKCiAgICAgICAgdGhpcy5tYXAub24oJ2RyYXcuY3JlYXRlJywgdXBkYXRlQXJlYSk7CiAgICAgICAgdGhpcy5tYXAub24oJ2RyYXcuZGVsZXRlJywgdXBkYXRlQXJlYSk7CiAgICAgICAgdGhpcy5tYXAub24oJ2RyYXcudXBkYXRlJywgdXBkYXRlQXJlYSk7CgogICAgICAgIGZ1bmN0aW9uIHVwZGF0ZUFyZWEoZSkgewogICAgICAgICAgICBjb25zdCBkYXRhID0gZHJhdy5nZXRBbGwoKTsKICAgICAgICAgICAgY29uc3QgYW5zd2VyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NhbGN1bGF0ZWQtYXJlYScpOwogICAgICAgICAgICBpZiAoZGF0YS5mZWF0dXJlcy5sZW5ndGggPiAwKSB7CiAgICAgICAgICAgICAgY29uc3QgYXJlYSA9IHR1cmYuYXJlYShkYXRhKTsKICAgICAgICAgICAgICAvLyBSZXN0cmljdCB0aGUgYXJlYSB0byAyIGRlY2ltYWwgcG9pbnRzLgogICAgICAgICAgICAgIGNvbnN0IHJvdW5kZWRfYXJlYSA9IE1hdGgucm91bmQoYXJlYSAqIDEwMCkgLyAxMDA7CiAgICAgICAgICAgICAgYW5zd2VyLmlubmVySFRNTCA9IGA8cD48c3Ryb25nPiR7cm91bmRlZF9hcmVhfTwvc3Ryb25nPjwvcD48cD5zcXVhcmUgbWV0ZXJzPC9wPmA7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgYW5zd2VyLmlubmVySFRNTCA9ICcnOwogICAgICAgICAgICAgIGlmIChlLnR5cGUgIT09ICdkcmF3LmRlbGV0ZScpCiAgICAgICAgICAgICAgICBhbGVydCgnQ2xpY2sgdGhlIG1hcCB0byBkcmF3IGEgcG9seWdvbi4nKTsKICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIHRoaXMubWFwLm9uKCdsb2FkJywgKCkgPT4gewoKICAgICAgICAgIC8vIEFkZCAzRCB0ZXJyYWluCiAgICAgICAgICB0aGlzLm1hcC5hZGRTb3VyY2UoJ21hcGJveC1kZW0nLCB7CiAgICAgICAgICAgICd0eXBlJzogJ3Jhc3Rlci1kZW0nLAogICAgICAgICAgICAndXJsJzogJ21hcGJveDovL21hcGJveC5tYXBib3gtdGVycmFpbi1kZW0tdjEnLAogICAgICAgICAgICAndGlsZVNpemUnOiA1MTIsCiAgICAgICAgICAgICdtYXh6b29tJzogMjAKICAgICAgICAgIH0pOwogICAgICAgICAgLy8gYWRkIHRoZSBERU0gc291cmNlIGFzIGEgdGVycmFpbiBsYXllciB3aXRoIGV4YWdnZXJhdGVkIGhlaWdodAogICAgICAgICAgdGhpcy5tYXAuc2V0VGVycmFpbih7ICdzb3VyY2UnOiAnbWFwYm94LWRlbScsICdleGFnZ2VyYXRpb24nOiAxLjUgfSk7CgogICAgICAgICAgLy8gQWRkIHBhcmNlbHMgbGF5ZXIgc291cmNlIChDb1YpCiAgICAgICAgICB0aGlzLm1hcC5hZGRTb3VyY2UoJ3Byb3BlcnR5LXBhcmNlbC1wb2x5Z29ucycsIHsKICAgICAgICAgICAgJ3R5cGUnOiAnZ2VvanNvbicsCiAgICAgICAgICAgICdkYXRhJzogJ2h0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9uaWNob2xhc21hcnRpbm8vdnVlLXRocmVlYm94L21hc3Rlci9wdWJsaWMvZGF0YS9wcm9wZXJ0eS1wYXJjZWwtcG9seWdvbnMuZ2VvanNvbicsCiAgICAgICAgICB9KTsKCiAgICAgICAgICAvLyBBZGQgcGFyY2VscyBsYXllciB0byBtYXAKICAgICAgICAgIHRoaXMubWFwLmFkZExheWVyKHsKICAgICAgICAgICAgJ2lkJzogJ3Byb3BlcnR5LXBhcmNlbC1wb2x5Z29ucy1zaHAnLAogICAgICAgICAgICAndHlwZSc6ICdmaWxsJywKICAgICAgICAgICAgJ3NvdXJjZSc6ICdwcm9wZXJ0eS1wYXJjZWwtcG9seWdvbnMnLAogICAgICAgICAgICAncGFpbnQnOiB7CiAgICAgICAgICAgICAgJ2ZpbGwtY29sb3InOiAnIzAwODBmZicsIC8vIGJsdWUgY29sb3IgZmlsbAogICAgICAgICAgICAgICdmaWxsLW9wYWNpdHknOiAwLjIsCiAgICAgICAgICAgIH0sCiAgICAgICAgICB9KTsKCiAgICAgICAgICAvLyBUaGUgJ2J1aWxkaW5nJyBsYXllciBpbiB0aGUgTWFwYm94IFN0cmVldHMKICAgICAgICAgIC8vIHZlY3RvciB0aWxlc2V0IGNvbnRhaW5zIGJ1aWxkaW5nIGhlaWdodCBkYXRhCiAgICAgICAgICAvLyBmcm9tIE9wZW5TdHJlZXRNYXAuCiAgICAgICAgICB0aGlzLm1hcC5hZGRMYXllcih7CiAgICAgICAgICAgICdpZCc6ICdhZGQtM2QtYnVpbGRpbmdzJywKICAgICAgICAgICAgJ3NvdXJjZSc6ICdjb21wb3NpdGUnLAogICAgICAgICAgICAnc291cmNlLWxheWVyJzogJ2J1aWxkaW5nJywKICAgICAgICAgICAgJ2ZpbHRlcic6IFsnPT0nLCAnZXh0cnVkZScsICd0cnVlJ10sCiAgICAgICAgICAgICd0eXBlJzogJ2ZpbGwtZXh0cnVzaW9uJywKICAgICAgICAgICAgJ21pbnpvb20nOiAxMiwKICAgICAgICAgICAgJ3BhaW50JzogewogICAgICAgICAgICAgICdmaWxsLWV4dHJ1c2lvbi1jb2xvcic6ICcjYWFhJywKCiAgICAgICAgICAgICAgLy8gLy8gVXNlIGFuICdpbnRlcnBvbGF0ZScgZXhwcmVzc2lvbiB0bwogICAgICAgICAgICAgIC8vIC8vIGFkZCBhIHNtb290aCB0cmFuc2l0aW9uIGVmZmVjdCB0bwogICAgICAgICAgICAgIC8vIC8vIHRoZSBidWlsZGluZ3MgYXMgdGhlIHVzZXIgem9vbXMgaW4uCiAgICAgICAgICAgICAgLy8gJ2ZpbGwtZXh0cnVzaW9uLWhlaWdodCc6IFsKICAgICAgICAgICAgICAvLyAgICdpbnRlcnBvbGF0ZScsCiAgICAgICAgICAgICAgLy8gICBbJ2xpbmVhciddLAogICAgICAgICAgICAgIC8vICAgWyd6b29tJ10sCiAgICAgICAgICAgICAgLy8gICA5LAogICAgICAgICAgICAgIC8vICAgMCwKICAgICAgICAgICAgICAvLyAgIDE1LjA1LAogICAgICAgICAgICAgIC8vICAgWydnZXQnLCAnaGVpZ2h0J10KICAgICAgICAgICAgICAvLyBdLAogICAgICAgICAgICAgIC8vICdmaWxsLWV4dHJ1c2lvbi1iYXNlJzogWwogICAgICAgICAgICAgIC8vICAgJ2ludGVycG9sYXRlJywKICAgICAgICAgICAgICAvLyAgIFsnbGluZWFyJ10sCiAgICAgICAgICAgICAgLy8gICBbJ3pvb20nXSwKICAgICAgICAgICAgICAvLyAgIDksCiAgICAgICAgICAgICAgLy8gICAwLAogICAgICAgICAgICAgIC8vICAgMTUuMDUsCiAgICAgICAgICAgICAgLy8gICBbJ2dldCcsICdtaW5faGVpZ2h0J10KICAgICAgICAgICAgICAvLyBdLAoKICAgICAgICAgICAgICAnZmlsbC1leHRydXNpb24taGVpZ2h0JzogWydnZXQnLCAnaGVpZ2h0J10sCiAgICAgICAgICAgICAgJ2ZpbGwtZXh0cnVzaW9uLW9wYWNpdHknOiAwLjgsCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIH0sCiAgICAgICAgICApOwoKCgogICAgICAgIH0pOwoKCgogICAgICAgIC8vIC8vIEFkZCBzcGhlcmVzIHRvIG1hcAogICAgICAgIC8vIHRoaXMubWFwLmFkZExheWVyKHsKICAgICAgICAvLyAgIGlkOiAiY3VzdG9tX2xheWVyIiwKICAgICAgICAvLyAgIHR5cGU6ICJjdXN0b20iLAogICAgICAgIC8vICAgcmVuZGVyaW5nTW9kZTogIjNkIiwKICAgICAgICAvLwogICAgICAgIC8vICAgb25BZGQ6IGZ1bmN0aW9uIChtYXAsIG1ieENvbnRleHQpIHsKICAgICAgICAvLyAgICAgd2luZG93LnRiLmFkZChfdGhpcy5zcGhlcmUoLTEyMy4xMDY4NjU4LCA0OS4yNjI2OTgyKSk7CiAgICAgICAgLy8gICAgIHdpbmRvdy50Yi5hZGQoX3RoaXMuc3BoZXJlKC0xMjMuMTA4ODY1OCwgNDkuMjYyNjk4MikpOwogICAgICAgIC8vCiAgICAgICAgLy8gICAgIGxldCBwdWxzZU9iaiA9IHdpbmRvdy50YgogICAgICAgIC8vICAgICAgIC5PYmplY3QzRCh7IG9iajogcHVsc2UsIHVuaXRzOiAibWV0ZXJzIiB9KQogICAgICAgIC8vICAgICAgIC5zZXRDb29yZHMoWy0xMjMuMTA2ODY1OCwgNDkuMjYyNjk4MiwgMF0pOwogICAgICAgIC8vCiAgICAgICAgLy8gICAgIHB1bHNlT2JqLnNldEFuY2hvcigiYm90dG9tLWxlZnQiKTsKICAgICAgICAvLwogICAgICAgIC8vICAgICB3aW5kb3cudGIuYWRkKHB1bHNlT2JqKTsKICAgICAgICAvLyAgIH0sCiAgICAgICAgLy8gICByZW5kZXI6IGZ1bmN0aW9uIChnbCwgbWF0cml4KSB7CiAgICAgICAgLy8gICAgIHdpbmRvdy50Yi51cGRhdGUoKTsKICAgICAgICAvLyAgICAgX3RoaXMuYW5pbWF0ZVB1bHNlKCk7CiAgICAgICAgLy8gICB9LAogICAgICAgIC8vIH0pOwoKICAgICAgfQogICAgfSk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBzcGhlcmUobG9uLCBsYXQpIHsKICAgICAgbGV0IG9yaWdpbiA9IFtsb24sIGxhdCwgMF07CiAgICAgIHJldHVybiB3aW5kb3cudGIKICAgICAgICAuc3BoZXJlKHsgY29sb3I6ICJyZWQiLCBtYXRlcmlhbDogIk1lc2hUb29uTWF0ZXJpYWwiIH0pCiAgICAgICAgLnNldENvb3JkcyhvcmlnaW4pOwogICAgfSwKICAgIGFuaW1hdGVQdWxzZSgpIHsKICAgICAgcHVsc2UudXBkYXRlKCk7CiAgICAgIHRoaXMubWFwLnRyaWdnZXJSZXBhaW50KCk7CiAgICB9LAogIH0sCn07Cg=="},{"version":3,"sources":["ThreeboxExample.vue"],"names":[],"mappings":";;;;;AAKA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;AAIA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ThreeboxExample.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div id=\"map\" />\n</template>\n\n<script>\nimport mapboxgl from \"mapbox-gl\";\nimport * as MapboxDraw from 'mapbox-gl-draw';\nimport threebox from \"threebox-plugin/dist/threebox\";\nimport { Threebox } from 'threebox-plugin';\nimport Pulse from \"./Pulses/Pulse\";\nimport * as turf from 'turf';\n\nlet pulse = new Pulse(400, 4000, true);\nthreebox\n\nexport default {\n  name: \"ThreeboxExample\",\n  data() {\n    return {\n      accessToken:\n        \"pk.eyJ1IjoibmljaG9sYXNtYXJ0aW5vIiwiYSI6ImNrMjVhOGphOTAzZGUzbG8wNHJhdTZrMmYifQ.98uDMnGIvn1zrw4ZWUO35g\",\n    };\n  },\n  mounted() {\n    mapboxgl.accessToken = this.accessToken;\n\n    this.map = new mapboxgl.Map({\n      container: \"map\",\n      interactive: true,\n      style: \"mapbox://styles/mapbox/light-v10\",\n      zoom: 16,\n      center: [-123.1068658, 49.2626982],\n      pitch: 60,\n      bearing: 360,\n      antialias: true,\n    }).on(\"style.load\", () => {\n      window.tb = new Threebox(\n        this.map,\n        this.map.getCanvas().getContext(\"webgl\"),\n        {\n          defaultLights: true,\n        }\n      );\n\n      // let _this = this;\n\n      // Add draw control\n      if (this.map.getLayer(\"custom_layer\") == null) {\n        const draw = new MapboxDraw({\n            displayControlsDefault: false,\n            // Select which mapbox-gl-draw control buttons to add to the map.\n            controls: {\n              polygon: true,\n              trash: true\n            },\n            // Set mapbox-gl-draw to draw by default.\n            // The user does not have to click the polygon control button first.\n            defaultMode: 'draw_polygon'\n          });\n        this.map.addControl(draw);\n\n        this.map.on('draw.create', updateArea);\n        this.map.on('draw.delete', updateArea);\n        this.map.on('draw.update', updateArea);\n\n        function updateArea(e) {\n            const data = draw.getAll();\n            const answer = document.getElementById('calculated-area');\n            if (data.features.length > 0) {\n              const area = turf.area(data);\n              // Restrict the area to 2 decimal points.\n              const rounded_area = Math.round(area * 100) / 100;\n              answer.innerHTML = `<p><strong>${rounded_area}</strong></p><p>square meters</p>`;\n            } else {\n              answer.innerHTML = '';\n              if (e.type !== 'draw.delete')\n                alert('Click the map to draw a polygon.');\n          }\n        }\n\n        this.map.on('load', () => {\n\n          // Add 3D terrain\n          this.map.addSource('mapbox-dem', {\n            'type': 'raster-dem',\n            'url': 'mapbox://mapbox.mapbox-terrain-dem-v1',\n            'tileSize': 512,\n            'maxzoom': 20\n          });\n          // add the DEM source as a terrain layer with exaggerated height\n          this.map.setTerrain({ 'source': 'mapbox-dem', 'exaggeration': 1.5 });\n\n          // Add parcels layer source (CoV)\n          this.map.addSource('property-parcel-polygons', {\n            'type': 'geojson',\n            'data': 'https://raw.githubusercontent.com/nicholasmartino/vue-threebox/master/public/data/property-parcel-polygons.geojson',\n          });\n\n          // Add parcels layer to map\n          this.map.addLayer({\n            'id': 'property-parcel-polygons-shp',\n            'type': 'fill',\n            'source': 'property-parcel-polygons',\n            'paint': {\n              'fill-color': '#0080ff', // blue color fill\n              'fill-opacity': 0.2,\n            },\n          });\n\n          // The 'building' layer in the Mapbox Streets\n          // vector tileset contains building height data\n          // from OpenStreetMap.\n          this.map.addLayer({\n            'id': 'add-3d-buildings',\n            'source': 'composite',\n            'source-layer': 'building',\n            'filter': ['==', 'extrude', 'true'],\n            'type': 'fill-extrusion',\n            'minzoom': 12,\n            'paint': {\n              'fill-extrusion-color': '#aaa',\n\n              // // Use an 'interpolate' expression to\n              // // add a smooth transition effect to\n              // // the buildings as the user zooms in.\n              // 'fill-extrusion-height': [\n              //   'interpolate',\n              //   ['linear'],\n              //   ['zoom'],\n              //   9,\n              //   0,\n              //   15.05,\n              //   ['get', 'height']\n              // ],\n              // 'fill-extrusion-base': [\n              //   'interpolate',\n              //   ['linear'],\n              //   ['zoom'],\n              //   9,\n              //   0,\n              //   15.05,\n              //   ['get', 'min_height']\n              // ],\n\n              'fill-extrusion-height': ['get', 'height'],\n              'fill-extrusion-opacity': 0.8,\n            },\n            },\n          );\n\n\n\n        });\n\n\n\n        // // Add spheres to map\n        // this.map.addLayer({\n        //   id: \"custom_layer\",\n        //   type: \"custom\",\n        //   renderingMode: \"3d\",\n        //\n        //   onAdd: function (map, mbxContext) {\n        //     window.tb.add(_this.sphere(-123.1068658, 49.2626982));\n        //     window.tb.add(_this.sphere(-123.1088658, 49.2626982));\n        //\n        //     let pulseObj = window.tb\n        //       .Object3D({ obj: pulse, units: \"meters\" })\n        //       .setCoords([-123.1068658, 49.2626982, 0]);\n        //\n        //     pulseObj.setAnchor(\"bottom-left\");\n        //\n        //     window.tb.add(pulseObj);\n        //   },\n        //   render: function (gl, matrix) {\n        //     window.tb.update();\n        //     _this.animatePulse();\n        //   },\n        // });\n\n      }\n    });\n  },\n  methods: {\n    sphere(lon, lat) {\n      let origin = [lon, lat, 0];\n      return window.tb\n        .sphere({ color: \"red\", material: \"MeshToonMaterial\" })\n        .setCoords(origin);\n    },\n    animatePulse() {\n      pulse.update();\n      this.map.triggerRepaint();\n    },\n  },\n};\n</script>\n\n<style scoped>\n#map {\n  width: 100%;\n  height: 100%;\n  padding: 0;\n  margin: 0;\n}\n</style>\n"]}]}