{"remainingRequest":"/Users/nicholasmartino/JavaScript/site-divider/node_modules/babel-loader/lib/index.js!/Users/nicholasmartino/JavaScript/site-divider/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--12-0!/Users/nicholasmartino/JavaScript/site-divider/src/store/store.js","dependencies":[{"path":"/Users/nicholasmartino/JavaScript/site-divider/src/store/store.js","mtime":1642560896731},{"path":"/Users/nicholasmartino/JavaScript/site-divider/node_modules/cache-loader/dist/cjs.js","mtime":1639173070060},{"path":"/Users/nicholasmartino/JavaScript/site-divider/node_modules/babel-loader/lib/index.js","mtime":1639173071039},{"path":"/Users/nicholasmartino/JavaScript/site-divider/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1639173070345}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/nicholasmartino/JavaScript/site-divider/src/store/store.js"],"names":["Vue","Vuex","mapboxgl","MapboxDraw","Threebox","updateDraw","use","store","Store","state","accessToken","widthRange","draw","mapbox","polygons","getters","getDraw","mutations","setRange","value","setDraw","loadMap","generatePolygons","console","log","actions","context","Map","container","interactive","style","zoom","center","pitch","bearing","antialias","attributionControl","on","window","tb","getCanvas","getContext","defaultLights","getLayer","addSource","addLayer","commit","displayControlsDefault","controls","polygon","trash","defaultMode"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,KAAKC,UAAZ,MAA4B,gBAA5B;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACAL,GAAG,CAACM,GAAJ,CAAQL,IAAR;AAGA,OAAO,MAAMM,KAAK,GAAG,IAAIN,IAAI,CAACO,KAAT,CAAe;AAClCC,EAAAA,KAAK,EAAC;AACJC,IAAAA,WAAW,EACT,sGAFE;AAGJC,IAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,EAAJ,CAHR;AAIJC,IAAAA,IAAI,EAAE,IAJF;AAKJC,IAAAA,MAAM,EAAE,IALJ;AAMJC,IAAAA,QAAQ,EAAE;AANN,GAD4B;AASlCC,EAAAA,OAAO,EAAE;AACPC,IAAAA,OAAO,EAAEP,KAAK,IAAI;AACd,aAAOA,KAAK,CAACG,IAAb;AACH;AAHM,GATyB;AAclCK,EAAAA,SAAS,EAAE;AACTC,IAAAA,QAAQ,EAAE,CAACT,KAAD,EAAQU,KAAR,KAAkB;AAC1BV,MAAAA,KAAK,CAACE,UAAN,GAAmBQ,KAAnB;AACD,KAHQ;AAITC,IAAAA,OAAO,EAAE,CAACX,KAAD,EAAQG,IAAR,KAAiB;AACxBH,MAAAA,KAAK,CAACG,IAAN,GAAaA,IAAb;AACD,KANQ;AAOTS,IAAAA,OAAO,EAAE,CAACZ,KAAD,EAAQI,MAAR,KAAmB;AAC1BJ,MAAAA,KAAK,CAACI,MAAN,GAAeA,MAAf;AACD,KATQ;AAUTS,IAAAA,gBAAgB,EAAE,CAACb,KAAD,EAAQK,QAAR,KAAqB;AACrCS,MAAAA,OAAO,CAACC,GAAR,CAAYnB,UAAU,CAACI,KAAK,CAACI,MAAP,EAAeJ,KAAK,CAACG,IAArB,EAA2BH,KAAK,CAACE,UAAjC,CAAtB;AACAF,MAAAA,KAAK,CAACK,QAAN,GAAiBA,QAAjB;AACD;AAbQ,GAduB;AA6BlCW,EAAAA,OAAO,EAAE;AACPJ,IAAAA,OAAO,CAAEK,OAAF,EAAW;AAChBxB,MAAAA,QAAQ,CAACQ,WAAT,GAAuB,KAAKD,KAAL,CAAWC,WAAlC;AACA,UAAIG,MAAM,GAAG,IAAIX,QAAQ,CAACyB,GAAb,CAAiB;AAC5BC,QAAAA,SAAS,EAAE,KADiB;AAE5BC,QAAAA,WAAW,EAAE,IAFe;AAG5BC,QAAAA,KAAK,EAAG,kCAHoB;AAI5BC,QAAAA,IAAI,EAAE,EAJsB;AAK5BC,QAAAA,MAAM,EAAE,CAAC,CAAC,UAAF,EAAc,SAAd,CALoB;AAM5BC,QAAAA,KAAK,EAAE,EANqB;AAO5BC,QAAAA,OAAO,EAAE,GAPmB;AAQ5BC,QAAAA,SAAS,EAAE,IARiB;AAS5BC,QAAAA,kBAAkB,EAAE;AATQ,OAAjB,EAUVC,EAVU,CAUP,YAVO,EAUO,MAAM;AACxBC,QAAAA,MAAM,CAACC,EAAP,GAAY,IAAInC,QAAJ,CACVS,MADU,EAEVA,MAAM,CAAC2B,SAAP,GAAmBC,UAAnB,CAA8B,OAA9B,CAFU,EAE8B;AACtCC,UAAAA,aAAa,EAAE;AADuB,SAF9B,CAAZ;;AAOA,YAAI7B,MAAM,CAAC8B,QAAP,CAAgB,cAAhB,KAAmC,IAAvC,EAA6C;AAE3C9B,UAAAA,MAAM,CAACwB,EAAP,CAAU,MAAV,EAAkB,MAAM;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACAxB,YAAAA,MAAM,CAAC+B,SAAP,CAAiB,qCAAjB,EAAwD;AACtD,sBAAQ,SAD8C;AAEtD,sBAAQ;AAF8C,aAAxD,EArCsB,CA0CtB;;AACA/B,YAAAA,MAAM,CAACgC,QAAP,CAAgB;AACd,oBAAM,iCADQ;AAEd,sBAAQ,MAFM;AAGd,wBAAU,qCAHI;AAId,uBAAS;AACP,8BAAc,SADP;AAEP,gCAAgB;AAFT;AAJK,aAAhB;AAUAhC,YAAAA,MAAM,CAACgC,QAAP,CAAgB;AACd,oBAAM,6CADQ;AAEd,sBAAQ,MAFM;AAGd,wBAAU,qCAHI;AAId,uBAAS;AACP,sCAAsB,SADf;AAEP,8BAAc,SAFP;AAGP,gCAAgB;AAHT,eAJK,CASd;;AATc,aAAhB,EArDsB,CAiEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AACAhC,YAAAA,MAAM,CAACgC,QAAP,CAAgB;AACd,oBAAM,kBADQ;AAEd,wBAAU,WAFI;AAGd,8BAAgB,UAHF;AAId,wBAAU,CAAC,IAAD,EAAO,SAAP,EAAkB,MAAlB,CAJI;AAKd,sBAAQ,gBALM;AAMd,yBAAW,EANG;AAOd,uBAAS;AACP,wCAAwB,MADjB;AAGP;AACA;AACA;AACA,yCAAyB,CACvB,aADuB,EAEvB,CAAC,QAAD,CAFuB,EAGvB,CAAC,MAAD,CAHuB,EAIvB,CAJuB,EAKvB,CALuB,EAMvB,KANuB,EAOvB,CAAC,KAAD,EAAQ,QAAR,CAPuB,CANlB;AAeP,uCAAuB,CACrB,aADqB,EAErB,CAAC,QAAD,CAFqB,EAGrB,CAAC,MAAD,CAHqB,EAIrB,CAJqB,EAKrB,CALqB,EAMrB,KANqB,EAOrB,CAAC,KAAD,EAAQ,YAAR,CAPqB,CAfhB;AAyBP;AACA,0CAA0B;AA1BnB;AAPK,aAAhB;AAoCD,WAnHD,EAF2C,CAuH3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAED;AACF,OAtKY,CAAb;AAuKAnB,MAAAA,OAAO,CAACoB,MAAR,CAAe,SAAf,EAA0BjC,MAA1B;AACD,KA3KM;;AA4KPO,IAAAA,OAAO,CAAEM,OAAF,EAAW;AAChB;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,YAAMZ,IAAI,GAAG,IAAIT,UAAJ,CAAe;AAC1B4C,QAAAA,sBAAsB,EAAE,KADE;AAExBC,QAAAA,QAAQ,EAAE;AACRC,UAAAA,OAAO,EAAE,IADD;AAERC,UAAAA,KAAK,EAAE;AAFC,SAFc;AAM1BC,QAAAA,WAAW,EAAE;AANa,OAAf,CAAb,CAHgB,CAWhB;;AACAzB,MAAAA,OAAO,CAACoB,MAAR,CAAe,SAAf,EAA0BlC,IAA1B;AACD;;AAzLM;AA7ByB,CAAf,CAAd","sourcesContent":["import Vue from 'vue';\nimport Vuex from 'vuex';\nimport mapboxgl from \"mapbox-gl\";\nimport * as MapboxDraw from 'mapbox-gl-draw';\nimport { Threebox } from 'threebox-plugin';\nimport { updateDraw } from '../components/Map'\nVue.use(Vuex);\n\n\nexport const store = new Vuex.Store({\n  state:{\n    accessToken:\n      \"pk.eyJ1IjoibmljaG9sYXNtYXJ0aW5vIiwiYSI6ImNrMjVhOGphOTAzZGUzbG8wNHJhdTZrMmYifQ.98uDMnGIvn1zrw4ZWUO35g\",\n    widthRange: [6, 10],\n    draw: null,\n    mapbox: null,\n    polygons: null\n  },\n  getters: {\n    getDraw: state => {\n        return state.draw\n    }\n  },\n  mutations: {\n    setRange: (state, value) => {\n      state.widthRange = value\n    },\n    setDraw: (state, draw) => {\n      state.draw = draw\n    },\n    loadMap: (state, mapbox) => {\n      state.mapbox = mapbox\n    },\n    generatePolygons: (state, polygons) => {\n      console.log(updateDraw(state.mapbox, state.draw, state.widthRange))\n      state.polygons = polygons\n    }\n  },\n  actions: {\n    loadMap (context) {\n      mapboxgl.accessToken = this.state.accessToken\n      var mapbox = new mapboxgl.Map({\n        container: \"map\",\n        interactive: true,\n        style:  \"mapbox://styles/mapbox/light-v10\",\n        zoom: 13,\n        center: [-122.845821, 49.177020],\n        pitch: 60,\n        bearing: 360,\n        antialias: true,\n        attributionControl: false\n      }).on(\"style.load\", () => {\n        window.tb = new Threebox(\n          mapbox,\n          mapbox.getCanvas().getContext(\"webgl\"), {\n            defaultLights: true,\n          }\n        );\n\n        if (mapbox.getLayer(\"custom_layer\") == null) {\n\n          mapbox.on('load', () => {\n\n            // // Add 3D terrain\n            // mapbox.addSource('mapbox-dem', {\n            //   'type': 'raster-dem',\n            //   'url': 'mapbox://mapbox.mapbox-terrain-dem-v1',\n            //   'tileSize': 512,\n            //   'maxzoom': 20\n            // });\n\n            // // Add satellite map data source\n            // mapbox.addSource('xyz-tile',{\n            //   'type': 'raster',\n            //   'tiles': ['https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}'],\n            //   'tileSize': 512,\n            // })\n      \n            // // Add satellite map data layer\n            // mapbox.addLayer({\n            //   'id': 'wms-test-layer',\n            //   'type': 'raster',\n            //   'source': 'xyz-tile',\n            //   'paint': {\n            //     'raster-opacity': 0.2,\n            //   }\n            // })\n\n            // // Add the DEM source as a terrain layer with exaggerated height\n            // mapbox.setTerrain({ 'source': 'mapbox-dem', 'exaggeration': 1.5 });\n\n            // // Add parcels layer source (CoV)\n            // mapbox.addSource('property-parcel-polygons', {\n            //   'type': 'geojson',\n            //   'data': 'https://raw.githubusercontent.com/nicholasmartino/vue-threebox/master/public/data/property-parcel-polygons.geojson',\n            // });\n\n            // Add parcels layer source (Surrey)\n            mapbox.addSource('property-parcel-polygons-surrey-src', {\n              'type': 'geojson',\n              'data': 'https://raw.githubusercontent.com/nicholasmartino/site-divider/master/public/data/property-parcel-surrey.geojson'\n            })\n\n            // Add Surrey parcels layer to map\n            mapbox.addLayer({\n              'id': 'property-parcel-polygons-surrey',\n              'type': 'fill',\n              'source': 'property-parcel-polygons-surrey-src',\n              'paint': {\n                'fill-color': '#0000ff',\n                'fill-opacity': 0.2\n              }\n            })\n\n            mapbox.addLayer({\n              'id': 'property-parcel-polygons-surrey-highlighted',\n              'type': 'fill',\n              'source': 'property-parcel-polygons-surrey-src',\n              'paint': {\n                'fill-outline-color': '#484896',\n                'fill-color': '#6e599f',\n                'fill-opacity': 0.75\n              },\n              // 'filter': ['in', 'PID', '']\n            })\n\n            // // Add CoV parcels layer to map\n            // mapbox.addLayer({\n            //   'id': 'property-parcel-polygons-shp',\n            //   'type': 'fill',\n            //   'source': 'property-parcel-polygons',\n            //   'paint': {\n            //     'fill-color': '#0000ff', // blue color fill\n            //     'fill-opacity': 0.2,\n            //   },\n            // });\n\n            // The 'building' layer in the Mapbox Streets\n            // vector tileset contains building height data\n            // from OpenStreetMap.\n            mapbox.addLayer({\n              'id': 'add-3d-buildings',\n              'source': 'composite',\n              'source-layer': 'building',\n              'filter': ['==', 'extrude', 'true'],\n              'type': 'fill-extrusion',\n              'minzoom': 12,\n              'paint': {\n                'fill-extrusion-color': '#aaa',\n\n                // Use an 'interpolate' expression to\n                // add a smooth transition effect to\n                // the buildings as the user zooms in.\n                'fill-extrusion-height': [\n                  'interpolate',\n                  ['linear'],\n                  ['zoom'],\n                  9,\n                  0,\n                  15.05,\n                  ['get', 'height']\n                ],\n                'fill-extrusion-base': [\n                  'interpolate',\n                  ['linear'],\n                  ['zoom'],\n                  9,\n                  0,\n                  15.05,\n                  ['get', 'min_height']\n                ],\n\n                // 'fill-extrusion-height': ['get', 'height'],\n                'fill-extrusion-opacity': 0.8,\n              },\n            });\n          });\n\n          // // Add spheres to map\n          // const _this = this\n          // mapbox.addLayer({\n          //   id: \"custom_layer\",\n          //   type: \"custom\",\n          //   renderingMode: \"3d\",\n          //\n          //   onAdd: function (map, mbxContext) {\n          //     window.tb.add(_this.sphere(-123.1068658, 49.2626982));\n          //     window.tb.add(_this.sphere(-123.1088658, 49.2626982));\n          //     console.log(map)\n          //     console.log(mbxContext)\n          //     let pulseObj = window.tb\n          //       .Object3D({ obj: pulse, units: \"meters\" })\n          //       .setCoords([-123.1068658, 49.2626982, 0]);\n          //\n          //     pulseObj.setAnchor(\"bottom-left\");\n          //\n          //     window.tb.add(pulseObj);\n          //   },\n          //   render: function (gl, matrix) {\n          //     window.tb.update();\n          //     _this.animatePulse();\n          //     console.log(gl)\n          //     console.log(matrix)\n          //   },\n          // });\n\n        }\n      });\n      context.commit('loadMap', mapbox)\n    },\n    setDraw (context) {\n      // Add draw controls\n      console.log(\"Add draw\")\n      const draw = new MapboxDraw({\n        displayControlsDefault: false,\n          controls: {\n            polygon: true,\n            trash: true\n        },\n        defaultMode: 'draw_polygon'\n      });\n      // this.state.mapbox.addControl(draw, 'top-left');\n      context.commit('setDraw', draw)\n    },\n  }\n})\n"]}]}