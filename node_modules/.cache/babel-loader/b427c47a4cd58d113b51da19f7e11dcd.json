{"remainingRequest":"/Users/nicholasmartino/JavaScript/site-divider/node_modules/babel-loader/lib/index.js!/Users/nicholasmartino/JavaScript/site-divider/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--12-0!/Users/nicholasmartino/JavaScript/site-divider/src/store/store.js","dependencies":[{"path":"/Users/nicholasmartino/JavaScript/site-divider/src/store/store.js","mtime":1642462970688},{"path":"/Users/nicholasmartino/JavaScript/site-divider/node_modules/cache-loader/dist/cjs.js","mtime":1639173070060},{"path":"/Users/nicholasmartino/JavaScript/site-divider/node_modules/babel-loader/lib/index.js","mtime":1639173071039},{"path":"/Users/nicholasmartino/JavaScript/site-divider/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1639173070345}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IFZ1ZSBmcm9tICd2dWUnOwppbXBvcnQgVnVleCBmcm9tICd2dWV4JzsKaW1wb3J0IG1hcGJveGdsIGZyb20gIm1hcGJveC1nbCI7CmltcG9ydCAqIGFzIE1hcGJveERyYXcgZnJvbSAnbWFwYm94LWdsLWRyYXcnOwppbXBvcnQgeyBUaHJlZWJveCB9IGZyb20gJ3RocmVlYm94LXBsdWdpbic7CmltcG9ydCB7IHVwZGF0ZURyYXcgfSBmcm9tICcuLi9jb21wb25lbnRzL01hcCc7ClZ1ZS51c2UoVnVleCk7CmV4cG9ydCBjb25zdCBzdG9yZSA9IG5ldyBWdWV4LlN0b3JlKHsKICBzdGF0ZTogewogICAgYWNjZXNzVG9rZW46ICJway5leUoxSWpvaWJtbGphRzlzWVhOdFlYSjBhVzV2SWl3aVlTSTZJbU5yTWpWaE9HcGhPVEF6WkdVemJHOHdOSEpoZFRack1tWWlmUS45OHVETW5HSXZuMXpydzRaV1VPMzVnIiwKICAgIHdpZHRoUmFuZ2U6IFs2LCAxMF0sCiAgICBkcmF3OiBudWxsLAogICAgbWFwYm94OiBudWxsLAogICAgcG9seWdvbnM6IG51bGwKICB9LAogIGdldHRlcnM6IHsKICAgIGdldERyYXc6IHN0YXRlID0+IHsKICAgICAgcmV0dXJuIHN0YXRlLmRyYXc7CiAgICB9CiAgfSwKICBtdXRhdGlvbnM6IHsKICAgIHNldFJhbmdlOiAoc3RhdGUsIHZhbHVlKSA9PiB7CiAgICAgIHN0YXRlLndpZHRoUmFuZ2UgPSB2YWx1ZTsKICAgIH0sCiAgICBzZXREcmF3OiAoc3RhdGUsIGRyYXcpID0+IHsKICAgICAgc3RhdGUuZHJhdyA9IGRyYXc7CiAgICB9LAogICAgbG9hZE1hcDogKHN0YXRlLCBtYXBib3gpID0+IHsKICAgICAgc3RhdGUubWFwYm94ID0gbWFwYm94OwogICAgfSwKICAgIGdlbmVyYXRlUG9seWdvbnM6IChzdGF0ZSwgcG9seWdvbnMpID0+IHsKICAgICAgY29uc29sZS5sb2codXBkYXRlRHJhdyhzdGF0ZS5tYXBib3gsIHN0YXRlLmRyYXcsIHN0YXRlLndpZHRoUmFuZ2UpKTsKICAgICAgc3RhdGUucG9seWdvbnMgPSBwb2x5Z29uczsKICAgIH0KICB9LAogIGFjdGlvbnM6IHsKICAgIGxvYWRNYXAoY29udGV4dCkgewogICAgICBtYXBib3hnbC5hY2Nlc3NUb2tlbiA9IHRoaXMuc3RhdGUuYWNjZXNzVG9rZW47CiAgICAgIHZhciBtYXBib3ggPSBuZXcgbWFwYm94Z2wuTWFwKHsKICAgICAgICBjb250YWluZXI6ICJtYXAiLAogICAgICAgIGludGVyYWN0aXZlOiB0cnVlLAogICAgICAgIHN0eWxlOiAibWFwYm94Oi8vc3R5bGVzL21hcGJveC9saWdodC12MTAiLAogICAgICAgIHpvb206IDEyLAogICAgICAgIGNlbnRlcjogWy0xMjIuODQ1ODIxLCA0OS4xNzcwMjBdLAogICAgICAgIHBpdGNoOiA2MCwKICAgICAgICBiZWFyaW5nOiAzNjAsCiAgICAgICAgYW50aWFsaWFzOiB0cnVlLAogICAgICAgIGF0dHJpYnV0aW9uQ29udHJvbDogZmFsc2UKICAgICAgfSkub24oInN0eWxlLmxvYWQiLCAoKSA9PiB7CiAgICAgICAgd2luZG93LnRiID0gbmV3IFRocmVlYm94KG1hcGJveCwgbWFwYm94LmdldENhbnZhcygpLmdldENvbnRleHQoIndlYmdsIiksIHsKICAgICAgICAgIGRlZmF1bHRMaWdodHM6IHRydWUKICAgICAgICB9KTsKCiAgICAgICAgaWYgKG1hcGJveC5nZXRMYXllcigiY3VzdG9tX2xheWVyIikgPT0gbnVsbCkgewogICAgICAgICAgbWFwYm94Lm9uKCdsb2FkJywgKCkgPT4gewogICAgICAgICAgICAvLyBBZGQgM0QgdGVycmFpbgogICAgICAgICAgICBtYXBib3guYWRkU291cmNlKCdtYXBib3gtZGVtJywgewogICAgICAgICAgICAgICd0eXBlJzogJ3Jhc3Rlci1kZW0nLAogICAgICAgICAgICAgICd1cmwnOiAnbWFwYm94Oi8vbWFwYm94Lm1hcGJveC10ZXJyYWluLWRlbS12MScsCiAgICAgICAgICAgICAgJ3RpbGVTaXplJzogNTEyLAogICAgICAgICAgICAgICdtYXh6b29tJzogMjAKICAgICAgICAgICAgfSk7IC8vIEFkZCBzYXRlbGxpdGUgbWFwCgogICAgICAgICAgICBtYXBib3guYWRkU291cmNlKCd4eXotdGlsZScsIHsKICAgICAgICAgICAgICAndHlwZSc6ICdyYXN0ZXInLAogICAgICAgICAgICAgICd0aWxlcyc6IFsnaHR0cHM6Ly9zZXJ2ZXIuYXJjZ2lzb25saW5lLmNvbS9BcmNHSVMvcmVzdC9zZXJ2aWNlcy9Xb3JsZF9JbWFnZXJ5L01hcFNlcnZlci90aWxlL3t6fS97eX0ve3h9J10sCiAgICAgICAgICAgICAgJ3RpbGVTaXplJzogNTEyCiAgICAgICAgICAgIH0pOwogICAgICAgICAgICBtYXBib3guYWRkTGF5ZXIoewogICAgICAgICAgICAgICdpZCc6ICd3bXMtdGVzdC1sYXllcicsCiAgICAgICAgICAgICAgJ3R5cGUnOiAncmFzdGVyJywKICAgICAgICAgICAgICAnc291cmNlJzogJ3h5ei10aWxlJywKICAgICAgICAgICAgICAncGFpbnQnOiB7CiAgICAgICAgICAgICAgICAncmFzdGVyLW9wYWNpdHknOiAwLjIKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pOyAvLyBhZGQgdGhlIERFTSBzb3VyY2UgYXMgYSB0ZXJyYWluIGxheWVyIHdpdGggZXhhZ2dlcmF0ZWQgaGVpZ2h0CgogICAgICAgICAgICBtYXBib3guc2V0VGVycmFpbih7CiAgICAgICAgICAgICAgJ3NvdXJjZSc6ICdtYXBib3gtZGVtJywKICAgICAgICAgICAgICAnZXhhZ2dlcmF0aW9uJzogMS41CiAgICAgICAgICAgIH0pOyAvLyBBZGQgcGFyY2VscyBsYXllciBzb3VyY2UgKENvVikKCiAgICAgICAgICAgIG1hcGJveC5hZGRTb3VyY2UoJ3Byb3BlcnR5LXBhcmNlbC1wb2x5Z29ucycsIHsKICAgICAgICAgICAgICAndHlwZSc6ICdnZW9qc29uJywKICAgICAgICAgICAgICAnZGF0YSc6ICdodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vbmljaG9sYXNtYXJ0aW5vL3Z1ZS10aHJlZWJveC9tYXN0ZXIvcHVibGljL2RhdGEvcHJvcGVydHktcGFyY2VsLXBvbHlnb25zLmdlb2pzb24nCiAgICAgICAgICAgIH0pOyAvLyBBZGQgcGFyY2VscyBsYXllciB0byBtYXAKCiAgICAgICAgICAgIG1hcGJveC5hZGRMYXllcih7CiAgICAgICAgICAgICAgJ2lkJzogJ3Byb3BlcnR5LXBhcmNlbC1wb2x5Z29ucy1zaHAnLAogICAgICAgICAgICAgICd0eXBlJzogJ2ZpbGwnLAogICAgICAgICAgICAgICdzb3VyY2UnOiAncHJvcGVydHktcGFyY2VsLXBvbHlnb25zJywKICAgICAgICAgICAgICAncGFpbnQnOiB7CiAgICAgICAgICAgICAgICAnZmlsbC1jb2xvcic6ICcjZmZmZmZmJywKICAgICAgICAgICAgICAgIC8vIGJsdWUgY29sb3IgZmlsbAogICAgICAgICAgICAgICAgJ2ZpbGwtb3BhY2l0eSc6IDAuMgogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSk7IC8vIFRoZSAnYnVpbGRpbmcnIGxheWVyIGluIHRoZSBNYXBib3ggU3RyZWV0cwogICAgICAgICAgICAvLyB2ZWN0b3IgdGlsZXNldCBjb250YWlucyBidWlsZGluZyBoZWlnaHQgZGF0YQogICAgICAgICAgICAvLyBmcm9tIE9wZW5TdHJlZXRNYXAuCgogICAgICAgICAgICBtYXBib3guYWRkTGF5ZXIoewogICAgICAgICAgICAgICdpZCc6ICdhZGQtM2QtYnVpbGRpbmdzJywKICAgICAgICAgICAgICAnc291cmNlJzogJ2NvbXBvc2l0ZScsCiAgICAgICAgICAgICAgJ3NvdXJjZS1sYXllcic6ICdidWlsZGluZycsCiAgICAgICAgICAgICAgJ2ZpbHRlcic6IFsnPT0nLCAnZXh0cnVkZScsICd0cnVlJ10sCiAgICAgICAgICAgICAgJ3R5cGUnOiAnZmlsbC1leHRydXNpb24nLAogICAgICAgICAgICAgICdtaW56b29tJzogMTIsCiAgICAgICAgICAgICAgJ3BhaW50JzogewogICAgICAgICAgICAgICAgJ2ZpbGwtZXh0cnVzaW9uLWNvbG9yJzogJyNhYWEnLAogICAgICAgICAgICAgICAgLy8gVXNlIGFuICdpbnRlcnBvbGF0ZScgZXhwcmVzc2lvbiB0bwogICAgICAgICAgICAgICAgLy8gYWRkIGEgc21vb3RoIHRyYW5zaXRpb24gZWZmZWN0IHRvCiAgICAgICAgICAgICAgICAvLyB0aGUgYnVpbGRpbmdzIGFzIHRoZSB1c2VyIHpvb21zIGluLgogICAgICAgICAgICAgICAgJ2ZpbGwtZXh0cnVzaW9uLWhlaWdodCc6IFsnaW50ZXJwb2xhdGUnLCBbJ2xpbmVhciddLCBbJ3pvb20nXSwgOSwgMCwgMTUuMDUsIFsnZ2V0JywgJ2hlaWdodCddXSwKICAgICAgICAgICAgICAgICdmaWxsLWV4dHJ1c2lvbi1iYXNlJzogWydpbnRlcnBvbGF0ZScsIFsnbGluZWFyJ10sIFsnem9vbSddLCA5LCAwLCAxNS4wNSwgWydnZXQnLCAnbWluX2hlaWdodCddXSwKICAgICAgICAgICAgICAgIC8vICdmaWxsLWV4dHJ1c2lvbi1oZWlnaHQnOiBbJ2dldCcsICdoZWlnaHQnXSwKICAgICAgICAgICAgICAgICdmaWxsLWV4dHJ1c2lvbi1vcGFjaXR5JzogMC44CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KTsKICAgICAgICAgIH0pOyAvLyAvLyBBZGQgc3BoZXJlcyB0byBtYXAKICAgICAgICAgIC8vIGNvbnN0IF90aGlzID0gdGhpcwogICAgICAgICAgLy8gbWFwYm94LmFkZExheWVyKHsKICAgICAgICAgIC8vICAgaWQ6ICJjdXN0b21fbGF5ZXIiLAogICAgICAgICAgLy8gICB0eXBlOiAiY3VzdG9tIiwKICAgICAgICAgIC8vICAgcmVuZGVyaW5nTW9kZTogIjNkIiwKICAgICAgICAgIC8vCiAgICAgICAgICAvLyAgIG9uQWRkOiBmdW5jdGlvbiAobWFwLCBtYnhDb250ZXh0KSB7CiAgICAgICAgICAvLyAgICAgd2luZG93LnRiLmFkZChfdGhpcy5zcGhlcmUoLTEyMy4xMDY4NjU4LCA0OS4yNjI2OTgyKSk7CiAgICAgICAgICAvLyAgICAgd2luZG93LnRiLmFkZChfdGhpcy5zcGhlcmUoLTEyMy4xMDg4NjU4LCA0OS4yNjI2OTgyKSk7CiAgICAgICAgICAvLyAgICAgY29uc29sZS5sb2cobWFwKQogICAgICAgICAgLy8gICAgIGNvbnNvbGUubG9nKG1ieENvbnRleHQpCiAgICAgICAgICAvLyAgICAgbGV0IHB1bHNlT2JqID0gd2luZG93LnRiCiAgICAgICAgICAvLyAgICAgICAuT2JqZWN0M0QoeyBvYmo6IHB1bHNlLCB1bml0czogIm1ldGVycyIgfSkKICAgICAgICAgIC8vICAgICAgIC5zZXRDb29yZHMoWy0xMjMuMTA2ODY1OCwgNDkuMjYyNjk4MiwgMF0pOwogICAgICAgICAgLy8KICAgICAgICAgIC8vICAgICBwdWxzZU9iai5zZXRBbmNob3IoImJvdHRvbS1sZWZ0Iik7CiAgICAgICAgICAvLwogICAgICAgICAgLy8gICAgIHdpbmRvdy50Yi5hZGQocHVsc2VPYmopOwogICAgICAgICAgLy8gICB9LAogICAgICAgICAgLy8gICByZW5kZXI6IGZ1bmN0aW9uIChnbCwgbWF0cml4KSB7CiAgICAgICAgICAvLyAgICAgd2luZG93LnRiLnVwZGF0ZSgpOwogICAgICAgICAgLy8gICAgIF90aGlzLmFuaW1hdGVQdWxzZSgpOwogICAgICAgICAgLy8gICAgIGNvbnNvbGUubG9nKGdsKQogICAgICAgICAgLy8gICAgIGNvbnNvbGUubG9nKG1hdHJpeCkKICAgICAgICAgIC8vICAgfSwKICAgICAgICAgIC8vIH0pOwogICAgICAgIH0KICAgICAgfSk7CiAgICAgIGNvbnRleHQuY29tbWl0KCdsb2FkTWFwJywgbWFwYm94KTsKICAgIH0sCgogICAgc2V0RHJhdyhjb250ZXh0KSB7CiAgICAgIC8vIEFkZCBkcmF3IGNvbnRyb2xzCiAgICAgIGNvbnNvbGUubG9nKCJBZGQgZHJhdyIpOwogICAgICBjb25zdCBkcmF3ID0gbmV3IE1hcGJveERyYXcoewogICAgICAgIGRpc3BsYXlDb250cm9sc0RlZmF1bHQ6IGZhbHNlLAogICAgICAgIGNvbnRyb2xzOiB7CiAgICAgICAgICBwb2x5Z29uOiB0cnVlLAogICAgICAgICAgdHJhc2g6IHRydWUKICAgICAgICB9LAogICAgICAgIGRlZmF1bHRNb2RlOiAnZHJhd19wb2x5Z29uJwogICAgICB9KTsKICAgICAgdGhpcy5zdGF0ZS5tYXBib3guYWRkQ29udHJvbChkcmF3LCAndG9wLWxlZnQnKTsKICAgICAgY29udGV4dC5jb21taXQoJ3NldERyYXcnLCBkcmF3KTsKICAgIH0KCiAgfQp9KTs="},{"version":3,"sources":["/Users/nicholasmartino/JavaScript/site-divider/src/store/store.js"],"names":["Vue","Vuex","mapboxgl","MapboxDraw","Threebox","updateDraw","use","store","Store","state","accessToken","widthRange","draw","mapbox","polygons","getters","getDraw","mutations","setRange","value","setDraw","loadMap","generatePolygons","console","log","actions","context","Map","container","interactive","style","zoom","center","pitch","bearing","antialias","attributionControl","on","window","tb","getCanvas","getContext","defaultLights","getLayer","addSource","addLayer","setTerrain","commit","displayControlsDefault","controls","polygon","trash","defaultMode","addControl"],"mappings":"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","sourcesContent":["import Vue from 'vue';\nimport Vuex from 'vuex';\nimport mapboxgl from \"mapbox-gl\";\nimport * as MapboxDraw from 'mapbox-gl-draw';\nimport { Threebox } from 'threebox-plugin';\nimport { updateDraw } from '../components/Map'\nVue.use(Vuex);\n\n\nexport const store = new Vuex.Store({\n  state:{\n    accessToken:\n      \"pk.eyJ1IjoibmljaG9sYXNtYXJ0aW5vIiwiYSI6ImNrMjVhOGphOTAzZGUzbG8wNHJhdTZrMmYifQ.98uDMnGIvn1zrw4ZWUO35g\",\n    widthRange: [6, 10],\n    draw: null,\n    mapbox: null,\n    polygons: null\n  },\n  getters: {\n    getDraw: state => {\n        return state.draw\n    }\n  },\n  mutations: {\n    setRange: (state, value) => {\n      state.widthRange = value\n    },\n    setDraw: (state, draw) => {\n      state.draw = draw\n    },\n    loadMap: (state, mapbox) => {\n      state.mapbox = mapbox\n    },\n    generatePolygons: (state, polygons) => {\n      console.log(updateDraw(state.mapbox, state.draw, state.widthRange))\n      state.polygons = polygons\n    }\n  },\n  actions: {\n    loadMap (context) {\n      mapboxgl.accessToken = this.state.accessToken\n      var mapbox = new mapboxgl.Map({\n        container: \"map\",\n        interactive: true,\n        style:  \"mapbox://styles/mapbox/light-v10\",\n        zoom: 12,\n        center: [-122.845821, 49.177020],\n        pitch: 60,\n        bearing: 360,\n        antialias: true,\n        attributionControl: false\n      }).on(\"style.load\", () => {\n        window.tb = new Threebox(\n          mapbox,\n          mapbox.getCanvas().getContext(\"webgl\"), {\n            defaultLights: true,\n          }\n        );\n\n        if (mapbox.getLayer(\"custom_layer\") == null) {\n\n          mapbox.on('load', () => {\n\n            // Add 3D terrain\n            mapbox.addSource('mapbox-dem', {\n              'type': 'raster-dem',\n              'url': 'mapbox://mapbox.mapbox-terrain-dem-v1',\n              'tileSize': 512,\n              'maxzoom': 20\n            });\n\n            // Add satellite map\n            mapbox.addSource('xyz-tile',{\n              'type': 'raster',\n              'tiles': ['https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}'],\n              'tileSize': 512,\n            })\n      \n            mapbox.addLayer({\n              'id': 'wms-test-layer',\n              'type': 'raster',\n              'source': 'xyz-tile',\n              'paint': {\n                'raster-opacity': 0.2,\n              }\n            })\n\n            // add the DEM source as a terrain layer with exaggerated height\n            mapbox.setTerrain({ 'source': 'mapbox-dem', 'exaggeration': 1.5 });\n\n            // Add parcels layer source (CoV)\n            mapbox.addSource('property-parcel-polygons', {\n              'type': 'geojson',\n              'data': 'https://raw.githubusercontent.com/nicholasmartino/vue-threebox/master/public/data/property-parcel-polygons.geojson',\n            });\n\n            // Add parcels layer to map\n            mapbox.addLayer({\n              'id': 'property-parcel-polygons-shp',\n              'type': 'fill',\n              'source': 'property-parcel-polygons',\n              'paint': {\n                'fill-color': '#ffffff', // blue color fill\n                'fill-opacity': 0.2,\n              },\n            });\n\n            // The 'building' layer in the Mapbox Streets\n            // vector tileset contains building height data\n            // from OpenStreetMap.\n            mapbox.addLayer({\n              'id': 'add-3d-buildings',\n              'source': 'composite',\n              'source-layer': 'building',\n              'filter': ['==', 'extrude', 'true'],\n              'type': 'fill-extrusion',\n              'minzoom': 12,\n              'paint': {\n                'fill-extrusion-color': '#aaa',\n\n                // Use an 'interpolate' expression to\n                // add a smooth transition effect to\n                // the buildings as the user zooms in.\n                'fill-extrusion-height': [\n                  'interpolate',\n                  ['linear'],\n                  ['zoom'],\n                  9,\n                  0,\n                  15.05,\n                  ['get', 'height']\n                ],\n                'fill-extrusion-base': [\n                  'interpolate',\n                  ['linear'],\n                  ['zoom'],\n                  9,\n                  0,\n                  15.05,\n                  ['get', 'min_height']\n                ],\n\n                // 'fill-extrusion-height': ['get', 'height'],\n                'fill-extrusion-opacity': 0.8,\n              },\n            });\n          });\n\n          // // Add spheres to map\n          // const _this = this\n          // mapbox.addLayer({\n          //   id: \"custom_layer\",\n          //   type: \"custom\",\n          //   renderingMode: \"3d\",\n          //\n          //   onAdd: function (map, mbxContext) {\n          //     window.tb.add(_this.sphere(-123.1068658, 49.2626982));\n          //     window.tb.add(_this.sphere(-123.1088658, 49.2626982));\n          //     console.log(map)\n          //     console.log(mbxContext)\n          //     let pulseObj = window.tb\n          //       .Object3D({ obj: pulse, units: \"meters\" })\n          //       .setCoords([-123.1068658, 49.2626982, 0]);\n          //\n          //     pulseObj.setAnchor(\"bottom-left\");\n          //\n          //     window.tb.add(pulseObj);\n          //   },\n          //   render: function (gl, matrix) {\n          //     window.tb.update();\n          //     _this.animatePulse();\n          //     console.log(gl)\n          //     console.log(matrix)\n          //   },\n          // });\n\n        }\n      });\n      context.commit('loadMap', mapbox)\n    },\n    setDraw (context) {\n      // Add draw controls\n      console.log(\"Add draw\")\n      const draw = new MapboxDraw({\n        displayControlsDefault: false,\n          controls: {\n            polygon: true,\n            trash: true\n        },\n        defaultMode: 'draw_polygon'\n      });\n      this.state.mapbox.addControl(draw, 'top-left');\n      context.commit('setDraw', draw)\n    },\n  }\n})\n"]}]}