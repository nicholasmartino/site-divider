{"remainingRequest":"/Users/nicholasmartino/JavaScript/site-divider/node_modules/babel-loader/lib/index.js!/Users/nicholasmartino/JavaScript/site-divider/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/nicholasmartino/JavaScript/site-divider/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nicholasmartino/JavaScript/site-divider/src/components/TextInput.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/nicholasmartino/JavaScript/site-divider/src/components/TextInput.vue","mtime":1638849158000},{"path":"/Users/nicholasmartino/JavaScript/site-divider/node_modules/cache-loader/dist/cjs.js","mtime":1639173070060},{"path":"/Users/nicholasmartino/JavaScript/site-divider/node_modules/babel-loader/lib/index.js","mtime":1639173071039},{"path":"/Users/nicholasmartino/JavaScript/site-divider/node_modules/cache-loader/dist/cjs.js","mtime":1639173070060},{"path":"/Users/nicholasmartino/JavaScript/site-divider/node_modules/vue-loader/lib/index.js","mtime":1639173071313}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJUZXh0SW5wdXQiLAoKICBkYXRhKCkgewogICAgcmV0dXJuIHt9OwogIH0sCgogIG1vdW50ZWQoKSB7CiAgICBjb25zdCBmaWx0ZXJJbnB1dCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdmaWx0ZXItaW5wdXQnKTsKICAgIGZpbHRlcklucHV0LmFkZEV2ZW50TGlzdGVuZXIoJ2tleXVwJywgZSA9PiB7CiAgICAgIC8vIC8vIElmIHRoZSBpbnB1dCB2YWx1ZSBtYXRjaGVzIGEgbGF5ZXJJRCBzZXQKICAgICAgLy8gLy8gaXQncyB2aXNpYmlsaXR5IHRvICd2aXNpYmxlJyBvciBlbHNlIGhpZGUgaXQuCiAgICAgIC8vIGNvbnN0IHZhbHVlID0gZS50YXJnZXQudmFsdWUudHJpbSgpLnRvTG93ZXJDYXNlKCk7CiAgICAgIC8vIGZvciAoY29uc3QgbGF5ZXJJRCBvZiBsYXllcklEcykgewogICAgICAvLyAgIG1hcC5zZXRMYXlvdXRQcm9wZXJ0eSgKICAgICAgLy8gICAgIGxheWVySUQsCiAgICAgIC8vICAgICAndmlzaWJpbGl0eScsCiAgICAgIC8vICAgICBsYXllcklELmluY2x1ZGVzKHZhbHVlKSA/ICd2aXNpYmxlJyA6ICdub25lJwogICAgICAvLyAgICk7CiAgICAgIC8vIH0KICAgICAgY29uc29sZS5sb2coZSk7CiAgICB9KTsKICB9Cgp9Ow=="},{"version":3,"sources":["TextInput.vue"],"names":[],"mappings":";;;;;;AAQA,eAAA;AACA,EAAA,IAAA,EAAA,WADA;;AAEA,EAAA,IAAA,GAAA;AACA,WAAA,EAAA;AAGA,GANA;;AAOA,EAAA,OAAA,GAAA;AACA,UAAA,WAAA,GAAA,QAAA,CAAA,cAAA,CAAA,cAAA,CAAA;AAEA,IAAA,WAAA,CAAA,gBAAA,CAAA,OAAA,EAAA,CAAA,IAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,CAAA;AACA,KAZA;AAaA;;AAvBA,CAAA","sourcesContent":["<template>\n  <div class=\"filter-ctrl\">\n    <input id=\"filter-input\" type=\"text\" name=\"filter\" placeholder=\"Iterations\">\n  </div>\n</template>\n\n<script>\n\nexport default {\n  name: \"TextInput\",\n  data() {\n    return {\n\n    }\n  },\n  mounted() {\n    const filterInput = document.getElementById('filter-input');\n\n    filterInput.addEventListener('keyup', (e) => {\n      // // If the input value matches a layerID set\n      // // it's visibility to 'visible' or else hide it.\n      // const value = e.target.value.trim().toLowerCase();\n      // for (const layerID of layerIDs) {\n      //   map.setLayoutProperty(\n      //     layerID,\n      //     'visibility',\n      //     layerID.includes(value) ? 'visible' : 'none'\n      //   );\n      // }\n      console.log(e)\n    });\n  }\n}\n\n</script>\n\n\n<style>\n.filter-ctrl {\n  position: absolute;\n  top: 10px;\n  left: 10px;\n  z-index: 1;\n}\n\n.filter-ctrl input[type='text'] {\n  font: 12px/20px 'Avenir', Arial, Helvetica, sans-serif;\n  width: 100%;\n  border: 0;\n  background-color: #fff;\n  margin: 0;\n  color: rgba(0, 0, 0, 0.5);\n  padding: 10px;\n  box-shadow: 0 0 0 2px rgba(0, 0, 0, 0.1);\n  border-radius: 3px;\n  width: 180px;\n}\n</style>\n"],"sourceRoot":"src/components"}]}