{"remainingRequest":"/Volumes/GoogleDrive/My Drive/JavaScript/vue-threebox-sample/node_modules/babel-loader/lib/index.js!/Volumes/GoogleDrive/My Drive/JavaScript/vue-threebox-sample/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Volumes/GoogleDrive/My Drive/JavaScript/vue-threebox-sample/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/GoogleDrive/My Drive/JavaScript/vue-threebox-sample/src/components/ThreeboxExample.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Volumes/GoogleDrive/My Drive/JavaScript/vue-threebox-sample/src/components/ThreeboxExample.vue","mtime":1638168069000},{"path":"/Volumes/GoogleDrive/My Drive/JavaScript/vue-threebox-sample/node_modules/cache-loader/dist/cjs.js","mtime":1637704935000},{"path":"/Volumes/GoogleDrive/My Drive/JavaScript/vue-threebox-sample/node_modules/babel-loader/lib/index.js","mtime":1637705426000},{"path":"/Volumes/GoogleDrive/My Drive/JavaScript/vue-threebox-sample/node_modules/cache-loader/dist/cjs.js","mtime":1637704935000},{"path":"/Volumes/GoogleDrive/My Drive/JavaScript/vue-threebox-sample/node_modules/vue-loader/lib/index.js","mtime":1637705662000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KaW1wb3J0IG1hcGJveGdsIGZyb20gIm1hcGJveC1nbCI7CmltcG9ydCAqIGFzIE1hcGJveERyYXcgZnJvbSAnbWFwYm94LWdsLWRyYXcnOwppbXBvcnQgdGhyZWVib3ggZnJvbSAidGhyZWVib3gtcGx1Z2luL2Rpc3QvdGhyZWVib3giOwppbXBvcnQgeyBUaHJlZWJveCB9IGZyb20gJ3RocmVlYm94LXBsdWdpbic7CmltcG9ydCBQdWxzZSBmcm9tICIuL1B1bHNlcy9QdWxzZSI7CmltcG9ydCAqIGFzIHR1cmYgZnJvbSAndHVyZic7CmxldCBwdWxzZSA9IG5ldyBQdWxzZSg0MDAsIDQwMDAsIHRydWUpOwp0aHJlZWJveDsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJUaHJlZWJveEV4YW1wbGUiLAoKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgYWNjZXNzVG9rZW46ICJway5leUoxSWpvaWJtbGphRzlzWVhOdFlYSjBhVzV2SWl3aVlTSTZJbU5yTWpWaE9HcGhPVEF6WkdVemJHOHdOSEpoZFRack1tWWlmUS45OHVETW5HSXZuMXpydzRaV1VPMzVnIgogICAgfTsKICB9LAoKICBtb3VudGVkKCkgewogICAgbWFwYm94Z2wuYWNjZXNzVG9rZW4gPSB0aGlzLmFjY2Vzc1Rva2VuOwogICAgdGhpcy5tYXAgPSBuZXcgbWFwYm94Z2wuTWFwKHsKICAgICAgY29udGFpbmVyOiAibWFwIiwKICAgICAgaW50ZXJhY3RpdmU6IHRydWUsCiAgICAgIHN0eWxlOiAibWFwYm94Oi8vc3R5bGVzL21hcGJveC9saWdodC12MTAiLAogICAgICB6b29tOiAxNiwKICAgICAgY2VudGVyOiBbLTEyMy4xMDY4NjU4LCA0OS4yNjI2OTgyXSwKICAgICAgcGl0Y2g6IDYwLAogICAgICBiZWFyaW5nOiAzNjAsCiAgICAgIGFudGlhbGlhczogdHJ1ZSAvLyBhdHRyaWJ1dGlvbkNvbnRyb2w6IGZhbHNlCgogICAgfSkub24oInN0eWxlLmxvYWQiLCAoKSA9PiB7CiAgICAgIHdpbmRvdy50YiA9IG5ldyBUaHJlZWJveCh0aGlzLm1hcCwgdGhpcy5tYXAuZ2V0Q2FudmFzKCkuZ2V0Q29udGV4dCgid2ViZ2wiKSwgewogICAgICAgIGRlZmF1bHRMaWdodHM6IHRydWUKICAgICAgfSk7IC8vIGxldCBfdGhpcyA9IHRoaXM7CiAgICAgIC8vIEFkZCBkcmF3IGNvbnRyb2wKCiAgICAgIGlmICh0aGlzLm1hcC5nZXRMYXllcigiY3VzdG9tX2xheWVyIikgPT0gbnVsbCkgewogICAgICAgIHRoaXMubWFwLm9uKCdsb2FkJywgKCkgPT4gewogICAgICAgICAgLy8gQWRkIDNEIHRlcnJhaW4KICAgICAgICAgIHRoaXMubWFwLmFkZFNvdXJjZSgnbWFwYm94LWRlbScsIHsKICAgICAgICAgICAgJ3R5cGUnOiAncmFzdGVyLWRlbScsCiAgICAgICAgICAgICd1cmwnOiAnbWFwYm94Oi8vbWFwYm94Lm1hcGJveC10ZXJyYWluLWRlbS12MScsCiAgICAgICAgICAgICd0aWxlU2l6ZSc6IDUxMiwKICAgICAgICAgICAgJ21heHpvb20nOiAyMAogICAgICAgICAgfSk7IC8vIGFkZCB0aGUgREVNIHNvdXJjZSBhcyBhIHRlcnJhaW4gbGF5ZXIgd2l0aCBleGFnZ2VyYXRlZCBoZWlnaHQKCiAgICAgICAgICB0aGlzLm1hcC5zZXRUZXJyYWluKHsKICAgICAgICAgICAgJ3NvdXJjZSc6ICdtYXBib3gtZGVtJywKICAgICAgICAgICAgJ2V4YWdnZXJhdGlvbic6IDEuNQogICAgICAgICAgfSk7IC8vIEFkZCBwYXJjZWxzIGxheWVyIHNvdXJjZSAoQ29WKQoKICAgICAgICAgIHRoaXMubWFwLmFkZFNvdXJjZSgncHJvcGVydHktcGFyY2VsLXBvbHlnb25zJywgewogICAgICAgICAgICAndHlwZSc6ICdnZW9qc29uJywKICAgICAgICAgICAgJ2RhdGEnOiAnaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL25pY2hvbGFzbWFydGluby92dWUtdGhyZWVib3gvbWFzdGVyL3B1YmxpYy9kYXRhL3Byb3BlcnR5LXBhcmNlbC1wb2x5Z29ucy5nZW9qc29uJwogICAgICAgICAgfSk7IC8vIEFkZCBwYXJjZWxzIGxheWVyIHRvIG1hcAoKICAgICAgICAgIHRoaXMubWFwLmFkZExheWVyKHsKICAgICAgICAgICAgJ2lkJzogJ3Byb3BlcnR5LXBhcmNlbC1wb2x5Z29ucy1zaHAnLAogICAgICAgICAgICAndHlwZSc6ICdmaWxsJywKICAgICAgICAgICAgJ3NvdXJjZSc6ICdwcm9wZXJ0eS1wYXJjZWwtcG9seWdvbnMnLAogICAgICAgICAgICAncGFpbnQnOiB7CiAgICAgICAgICAgICAgJ2ZpbGwtY29sb3InOiAnIzAwODBmZicsCiAgICAgICAgICAgICAgLy8gYmx1ZSBjb2xvciBmaWxsCiAgICAgICAgICAgICAgJ2ZpbGwtb3BhY2l0eSc6IDAuMgogICAgICAgICAgICB9CiAgICAgICAgICB9KTsgLy8gVGhlICdidWlsZGluZycgbGF5ZXIgaW4gdGhlIE1hcGJveCBTdHJlZXRzCiAgICAgICAgICAvLyB2ZWN0b3IgdGlsZXNldCBjb250YWlucyBidWlsZGluZyBoZWlnaHQgZGF0YQogICAgICAgICAgLy8gZnJvbSBPcGVuU3RyZWV0TWFwLgoKICAgICAgICAgIHRoaXMubWFwLmFkZExheWVyKHsKICAgICAgICAgICAgJ2lkJzogJ2FkZC0zZC1idWlsZGluZ3MnLAogICAgICAgICAgICAnc291cmNlJzogJ2NvbXBvc2l0ZScsCiAgICAgICAgICAgICdzb3VyY2UtbGF5ZXInOiAnYnVpbGRpbmcnLAogICAgICAgICAgICAnZmlsdGVyJzogWyc9PScsICdleHRydWRlJywgJ3RydWUnXSwKICAgICAgICAgICAgJ3R5cGUnOiAnZmlsbC1leHRydXNpb24nLAogICAgICAgICAgICAnbWluem9vbSc6IDEyLAogICAgICAgICAgICAncGFpbnQnOiB7CiAgICAgICAgICAgICAgJ2ZpbGwtZXh0cnVzaW9uLWNvbG9yJzogJyNhYWEnLAogICAgICAgICAgICAgIC8vIC8vIFVzZSBhbiAnaW50ZXJwb2xhdGUnIGV4cHJlc3Npb24gdG8KICAgICAgICAgICAgICAvLyAvLyBhZGQgYSBzbW9vdGggdHJhbnNpdGlvbiBlZmZlY3QgdG8KICAgICAgICAgICAgICAvLyAvLyB0aGUgYnVpbGRpbmdzIGFzIHRoZSB1c2VyIHpvb21zIGluLgogICAgICAgICAgICAgIC8vICdmaWxsLWV4dHJ1c2lvbi1oZWlnaHQnOiBbCiAgICAgICAgICAgICAgLy8gICAnaW50ZXJwb2xhdGUnLAogICAgICAgICAgICAgIC8vICAgWydsaW5lYXInXSwKICAgICAgICAgICAgICAvLyAgIFsnem9vbSddLAogICAgICAgICAgICAgIC8vICAgOSwKICAgICAgICAgICAgICAvLyAgIDAsCiAgICAgICAgICAgICAgLy8gICAxNS4wNSwKICAgICAgICAgICAgICAvLyAgIFsnZ2V0JywgJ2hlaWdodCddCiAgICAgICAgICAgICAgLy8gXSwKICAgICAgICAgICAgICAvLyAnZmlsbC1leHRydXNpb24tYmFzZSc6IFsKICAgICAgICAgICAgICAvLyAgICdpbnRlcnBvbGF0ZScsCiAgICAgICAgICAgICAgLy8gICBbJ2xpbmVhciddLAogICAgICAgICAgICAgIC8vICAgWyd6b29tJ10sCiAgICAgICAgICAgICAgLy8gICA5LAogICAgICAgICAgICAgIC8vICAgMCwKICAgICAgICAgICAgICAvLyAgIDE1LjA1LAogICAgICAgICAgICAgIC8vICAgWydnZXQnLCAnbWluX2hlaWdodCddCiAgICAgICAgICAgICAgLy8gXSwKICAgICAgICAgICAgICAnZmlsbC1leHRydXNpb24taGVpZ2h0JzogWydnZXQnLCAnaGVpZ2h0J10sCiAgICAgICAgICAgICAgJ2ZpbGwtZXh0cnVzaW9uLW9wYWNpdHknOiAwLjgKICAgICAgICAgICAgfQogICAgICAgICAgfSk7IC8vIEFkZCBkcmF3IGNvbnRyb2xzCgogICAgICAgICAgY29uc3QgZHJhdyA9IG5ldyBNYXBib3hEcmF3KCk7CiAgICAgICAgICB0aGlzLm1hcC5hZGRDb250cm9sKGRyYXcsICd0b3AtcmlnaHQnKTsgLy8gQ2FsY3VsYXRlIHRoZSBhcmVhIG9mIGRyYXduIHBvbHlnb25zCgogICAgICAgICAgZnVuY3Rpb24gdXBkYXRlQXJlYSgpIHsKICAgICAgICAgICAgY29uc3QgZGF0YSA9IGRyYXcuZ2V0QWxsKCk7CiAgICAgICAgICAgIGNvbnN0IGFuc3dlciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjYWxjdWxhdGVkLWFyZWEnKTsKCiAgICAgICAgICAgIGlmIChkYXRhLmZlYXR1cmVzLmxlbmd0aCA+IDApIHsKICAgICAgICAgICAgICBjb25zdCBhcmVhID0gdHVyZi5hcmVhKGRhdGEpOyAvLyBSZXN0cmljdCB0aGUgYXJlYSB0byAyIGRlY2ltYWwgcG9pbnRzLgoKICAgICAgICAgICAgICBjb25zdCByb3VuZGVkX2FyZWEgPSBNYXRoLnJvdW5kKGFyZWEgKiAxMDApIC8gMTAwOwogICAgICAgICAgICAgIGFuc3dlci5pbm5lckhUTUwgPSBgPHA+PHN0cm9uZz4ke3JvdW5kZWRfYXJlYX08L3N0cm9uZz4gbcKyPC9wPmA7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgYW5zd2VyLmlubmVySFRNTCA9ICcnOyAvLyBpZiAoZS50eXBlICE9PSAnZHJhdy5kZWxldGUnKQogICAgICAgICAgICAgIC8vICAgYWxlcnQoJ0NsaWNrIHRoZSBtYXAgdG8gZHJhdyBhIHBvbHlnb24uJyk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KCiAgICAgICAgICB0aGlzLm1hcC5vbignZHJhdy5jcmVhdGUnLCB1cGRhdGVBcmVhKTsKICAgICAgICAgIHRoaXMubWFwLm9uKCdkcmF3LmRlbGV0ZScsIHVwZGF0ZUFyZWEpOwogICAgICAgICAgdGhpcy5tYXAub24oJ2RyYXcudXBkYXRlJywgdXBkYXRlQXJlYSk7IC8vIERpdmlkZSBwb2x5Z29uIHRvIGxpbmVTdHJpbmcKCiAgICAgICAgICB2YXIgbGluZSA9IHBvbHlnb25Ub0xpbmUoZHJhdy5nZXRBbGwoKSk7CiAgICAgICAgICBjb25zb2xlLmxvZyhsaW5lKTsKICAgICAgICB9KTsgLy8gLy8gQWRkIHNwaGVyZXMgdG8gbWFwCiAgICAgICAgLy8gdGhpcy5tYXAuYWRkTGF5ZXIoewogICAgICAgIC8vICAgaWQ6ICJjdXN0b21fbGF5ZXIiLAogICAgICAgIC8vICAgdHlwZTogImN1c3RvbSIsCiAgICAgICAgLy8gICByZW5kZXJpbmdNb2RlOiAiM2QiLAogICAgICAgIC8vCiAgICAgICAgLy8gICBvbkFkZDogZnVuY3Rpb24gKG1hcCwgbWJ4Q29udGV4dCkgewogICAgICAgIC8vICAgICB3aW5kb3cudGIuYWRkKF90aGlzLnNwaGVyZSgtMTIzLjEwNjg2NTgsIDQ5LjI2MjY5ODIpKTsKICAgICAgICAvLyAgICAgd2luZG93LnRiLmFkZChfdGhpcy5zcGhlcmUoLTEyMy4xMDg4NjU4LCA0OS4yNjI2OTgyKSk7CiAgICAgICAgLy8KICAgICAgICAvLyAgICAgbGV0IHB1bHNlT2JqID0gd2luZG93LnRiCiAgICAgICAgLy8gICAgICAgLk9iamVjdDNEKHsgb2JqOiBwdWxzZSwgdW5pdHM6ICJtZXRlcnMiIH0pCiAgICAgICAgLy8gICAgICAgLnNldENvb3JkcyhbLTEyMy4xMDY4NjU4LCA0OS4yNjI2OTgyLCAwXSk7CiAgICAgICAgLy8KICAgICAgICAvLyAgICAgcHVsc2VPYmouc2V0QW5jaG9yKCJib3R0b20tbGVmdCIpOwogICAgICAgIC8vCiAgICAgICAgLy8gICAgIHdpbmRvdy50Yi5hZGQocHVsc2VPYmopOwogICAgICAgIC8vICAgfSwKICAgICAgICAvLyAgIHJlbmRlcjogZnVuY3Rpb24gKGdsLCBtYXRyaXgpIHsKICAgICAgICAvLyAgICAgd2luZG93LnRiLnVwZGF0ZSgpOwogICAgICAgIC8vICAgICBfdGhpcy5hbmltYXRlUHVsc2UoKTsKICAgICAgICAvLyAgIH0sCiAgICAgICAgLy8gfSk7CiAgICAgIH0KICAgIH0pOwogIH0sCgogIG1ldGhvZHM6IHsKICAgIHNwaGVyZShsb24sIGxhdCkgewogICAgICBsZXQgb3JpZ2luID0gW2xvbiwgbGF0LCAwXTsKICAgICAgcmV0dXJuIHdpbmRvdy50Yi5zcGhlcmUoewogICAgICAgIGNvbG9yOiAicmVkIiwKICAgICAgICBtYXRlcmlhbDogIk1lc2hUb29uTWF0ZXJpYWwiCiAgICAgIH0pLnNldENvb3JkcyhvcmlnaW4pOwogICAgfSwKCiAgICBhbmltYXRlUHVsc2UoKSB7CiAgICAgIHB1bHNlLnVwZGF0ZSgpOwogICAgICB0aGlzLm1hcC50cmlnZ2VyUmVwYWludCgpOwogICAgfQoKICB9Cn07"},{"version":3,"sources":["ThreeboxExample.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div id=\"map\"></div>\n</template>\n\n<script>\nimport mapboxgl from \"mapbox-gl\";\nimport * as MapboxDraw from 'mapbox-gl-draw';\nimport threebox from \"threebox-plugin/dist/threebox\";\nimport { Threebox } from 'threebox-plugin';\nimport Pulse from \"./Pulses/Pulse\";\nimport * as turf from 'turf';\n\n\nlet pulse = new Pulse(400, 4000, true);\nthreebox\n\nexport default {\n  name: \"ThreeboxExample\",\n  data() {\n    return {\n      accessToken:\n        \"pk.eyJ1IjoibmljaG9sYXNtYXJ0aW5vIiwiYSI6ImNrMjVhOGphOTAzZGUzbG8wNHJhdTZrMmYifQ.98uDMnGIvn1zrw4ZWUO35g\",\n    };\n  },\n  mounted() {\n    mapboxgl.accessToken = this.accessToken;\n\n    this.map = new mapboxgl.Map({\n      container: \"map\",\n      interactive: true,\n      style:  \"mapbox://styles/mapbox/light-v10\",\n      zoom: 16,\n      center: [-123.1068658, 49.2626982],\n      pitch: 60,\n      bearing: 360,\n      antialias: true,\n      // attributionControl: false\n    }).on(\"style.load\", () => {\n      window.tb = new Threebox(\n        this.map,\n        this.map.getCanvas().getContext(\"webgl\"),\n        {\n          defaultLights: true,\n        }\n      );\n\n      // let _this = this;\n\n      // Add draw control\n      if (this.map.getLayer(\"custom_layer\") == null) {\n\n        this.map.on('load', () => {\n\n          // Add 3D terrain\n          this.map.addSource('mapbox-dem', {\n            'type': 'raster-dem',\n            'url': 'mapbox://mapbox.mapbox-terrain-dem-v1',\n            'tileSize': 512,\n            'maxzoom': 20\n          });\n\n          // add the DEM source as a terrain layer with exaggerated height\n          this.map.setTerrain({ 'source': 'mapbox-dem', 'exaggeration': 1.5 });\n\n          // Add parcels layer source (CoV)\n          this.map.addSource('property-parcel-polygons', {\n            'type': 'geojson',\n            'data': 'https://raw.githubusercontent.com/nicholasmartino/vue-threebox/master/public/data/property-parcel-polygons.geojson',\n          });\n\n          // Add parcels layer to map\n          this.map.addLayer({\n            'id': 'property-parcel-polygons-shp',\n            'type': 'fill',\n            'source': 'property-parcel-polygons',\n            'paint': {\n              'fill-color': '#0080ff', // blue color fill\n              'fill-opacity': 0.2,\n            },\n          });\n\n          // The 'building' layer in the Mapbox Streets\n          // vector tileset contains building height data\n          // from OpenStreetMap.\n          this.map.addLayer({\n            'id': 'add-3d-buildings',\n            'source': 'composite',\n            'source-layer': 'building',\n            'filter': ['==', 'extrude', 'true'],\n            'type': 'fill-extrusion',\n            'minzoom': 12,\n            'paint': {\n              'fill-extrusion-color': '#aaa',\n\n              // // Use an 'interpolate' expression to\n              // // add a smooth transition effect to\n              // // the buildings as the user zooms in.\n              // 'fill-extrusion-height': [\n              //   'interpolate',\n              //   ['linear'],\n              //   ['zoom'],\n              //   9,\n              //   0,\n              //   15.05,\n              //   ['get', 'height']\n              // ],\n              // 'fill-extrusion-base': [\n              //   'interpolate',\n              //   ['linear'],\n              //   ['zoom'],\n              //   9,\n              //   0,\n              //   15.05,\n              //   ['get', 'min_height']\n              // ],\n\n              'fill-extrusion-height': ['get', 'height'],\n              'fill-extrusion-opacity': 0.8,\n            },\n            });\n\n          // Add draw controls\n          const draw = new MapboxDraw();\n          this.map.addControl(draw, 'top-right');\n\n          // Calculate the area of drawn polygons\n          function updateArea() {\n              const data = draw.getAll();\n              const answer = document.getElementById('calculated-area');\n              if (data.features.length > 0) {\n                const area = turf.area(data);\n                // Restrict the area to 2 decimal points.\n                const rounded_area = Math.round(area * 100) / 100;\n                answer.innerHTML = `<p><strong>${rounded_area}</strong> m²</p>`;\n              } else {\n                answer.innerHTML = '';\n                // if (e.type !== 'draw.delete')\n                //   alert('Click the map to draw a polygon.');\n            }\n          }\n\n          this.map.on('draw.create', updateArea);\n          this.map.on('draw.delete', updateArea);\n          this.map.on('draw.update', updateArea);\n\n          // Divide polygon to lineString\n          var line = polygonToLine(draw.getAll());\n          console.log(line)\n\n        });\n\n        // // Add spheres to map\n        // this.map.addLayer({\n        //   id: \"custom_layer\",\n        //   type: \"custom\",\n        //   renderingMode: \"3d\",\n        //\n        //   onAdd: function (map, mbxContext) {\n        //     window.tb.add(_this.sphere(-123.1068658, 49.2626982));\n        //     window.tb.add(_this.sphere(-123.1088658, 49.2626982));\n        //\n        //     let pulseObj = window.tb\n        //       .Object3D({ obj: pulse, units: \"meters\" })\n        //       .setCoords([-123.1068658, 49.2626982, 0]);\n        //\n        //     pulseObj.setAnchor(\"bottom-left\");\n        //\n        //     window.tb.add(pulseObj);\n        //   },\n        //   render: function (gl, matrix) {\n        //     window.tb.update();\n        //     _this.animatePulse();\n        //   },\n        // });\n\n      }\n    });\n  },\n  methods: {\n    sphere(lon, lat) {\n      let origin = [lon, lat, 0];\n      return window.tb\n        .sphere({ color: \"red\", material: \"MeshToonMaterial\" })\n        .setCoords(origin);\n    },\n    animatePulse() {\n      pulse.update();\n      this.map.triggerRepaint();\n    },\n  },\n\n};\n\n</script>\n\n<style>\n#map {\n  position: absolute;\n  width: 100vw;\n  height: 100vh;\n}\n@import \"https://api.mapbox.com/mapbox-gl-js/v0.42.0/mapbox-gl.css\";\n@import \"https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-draw/v1.2.2/mapbox-gl-draw.css\";\n.mapboxgl-ctrl-group button {\n    width: 29px;\n    height: 29px;\n    display: block;\n    padding: 0;\n    outline: none;\n    border: 0;\n    box-sizing: border-box;\n    background-color: transparent;\n    cursor: pointer;\n    overflow: hidden;\n}\n.mapboxgl-ctrl-top-right {\n    top: 0;\n    right: 0;\n    position: absolute;\n}\n</style>\n"],"sourceRoot":"src/components"}]}